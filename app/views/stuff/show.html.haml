= render :partial => 'quicklog', :locals => { :stuff_name => @stuff.name }

%h1
  = @stuff.name
  - if @stuff.location
    = h('<')
    = @stuff.hierarchy.map {|l| link_to h(l.name), l}.join(h(' < ')).html_safe
      
  - if can? :update, @stuff
    - if @stuff.home_location and @stuff.location != @stuff.home_location
      = link_to "(return to #{@stuff.home_location.name})", log_stuff_path(:stuff_name => @stuff.name, :location_name => @stuff.home_location.name), :method => :post

%p
  - if can? :update, @stuff
    = link_to 'Edit', edit_stuff_path(@stuff)
    \|
  = link_to 'Back', stuff_index_path

- if @stuff.location 
  Current:
  = link_to @stuff.location.name, @stuff.location
  according to the system
  - if @stuff.home_location and can? :update, @stuff
    \-
    = link_to 'Set home', stuff_path(@stuff.id, :destination => request.url, :stuff => {:home_location_id => "#{@stuff.location_id}-#{@stuff.location_type}"}), :method => :put
  %br
- if @stuff.home_location    
  Home:
  = link_to @stuff.home_location.name, @stuff.home_location
  - if @stuff.location == @stuff.home_location
    .in_place
      (Hooray! A place for everything, and everything in its place)

%h2 Locations

%ul.locations
  - loc = @stuff.distinct_locations
  - loc.each do |l|
    - if l and l.location
      %li
        - if can? :update, @stuff
          = link_to l.location.name, log_stuff_path(:stuff_name => @stuff.name, :location_name => l.location.name), :method => :post
        - else
          = link_to l.location.name, l

- if can? :update, @stuff
  %p
    Other locations: 
    = Location.order('lower(name)').map { |l| link_to h(l.name), log_stuff_path(:stuff_name => @stuff.name, :location_name => l.name), :method => :post unless loc.include? l }.compact.join(', ').html_safe
    %br
    Other stuff: 
    = Stuff.order('lower(name)').map { |l| link_to h(l.name), log_stuff_path(:stuff_name => @stuff.name, :location_name => l.name), :method => :post unless loc.include? l }.compact.join(', ').html_safe
    
    
- within = Stuff.where('location_id=? AND location_type=?', @stuff.id, 'Stuff').order('name')
- if within.length > 0
  %h2 What's in or on this?
  %p= render :partial => 'list', :locals => { :stuff => within }

- if @stuff.location_histories.length > 0
  %h2 Where has this been?
  %p= render :partial => 'location_histories/list', :locals => { :histories => @stuff.location_histories, :show_name => false }

