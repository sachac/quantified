.block#block-login
  .content
    .row
      .login
        = form_for(resource, :as => resource_name, :url => session_path(resource_name), :html => { :class => mobile? ? "form-stacked" : "form" }) do |f|
          = hidden_field_tag :destination, params[:destination]
          %fieldset
            %legend Sign in
            .inner
              .clear-fix
                = label_tag :login, "Login"
                .input= f.text_field :login, :class => "text_field"
              .clear-fix  
                = label_tag :password, "Password"
                .input= f.password_field :password, :class => "text_field"
              - if devise_mapping.rememberable?
                .clear-fix
                  .input
                    .inputs-list
                      %label
                        = f.check_box :remember_me, :class => "checkbox"
                        Remember me
              .clear-fix
                .input
                  .box#services
                    = link_to image_tag('google_32.png', :size => "32x32", :alt => "Google"), oauth_url(:google, :subdomain => false), :class => 'service'
                    = link_to image_tag('facebook_32.png', :size => "32x32", :alt => "Facebook"), oauth_url(:facebook, :subdomain => false), :class => 'service'
            .actions
              %button.btn.primary{ :type => "submit" }
                = I18n.t('app.user.login_submit')
              = render "devise/shared/links"
      .sign_up
        = form_tag sign_up_path, :class => mobile? ? 'form-stacked' : 'form' do
          %fieldset
            %legend Sign up
            .inner
              .clearfix
                %p As you can probably tell, this system is waaay in beta. Interested? Fill in your e-mail address, and I'll get in touch when the system is ready for you. I promise to never sell your e-mail address or send you spam.
              .clearfix
                = label_tag :email
                .input= text_field_tag :email, params[:email]
            .actions
              %button.btn.primary{ :type => "submit" }
                = I18n.t('app.general.submit')