= setup_page 'clothing', @clothing.name

- if user_signed_in?      
  = link_to 'Edit', edit_clothing_path(@clothing)
  \|
= link_to 'Back', clothing_index_path

- if managing?
  = form_tag clothing_logs_path, class: 'form-inline' do
    = hidden_field_tag :clothing_id, @clothing.id
    = label_tag :date, 'Date', class: 'control-label'
    = text_field_tag :date, Time.zone.now.to_date, :class => 'datepicker'
    = select_tag :outfit_id, options_for_select([[1,1], [2,2], [3,3], [4,4]])
    = submit_tag 'Log', :class => 'btn btn-primary'

%p
  = @clothing.status
  \|
  - if managing?
    - {'store' => 'stored', 'activate' => 'active', 'donate' => 'donated'}.each do |action,status|
      - unless status.nil? or @clothing.status == status
        = link_to action, clothing_path(@clothing.id) + '?clothing[status]=' + status, :method => :put
  %span.meta
    - if @clothing.clothing_logs_count > 0
      \|
      Worn #{pluralize @clothing.clothing_logs_count, "time"}, last worn:
      - date = @clothing.last_worn
      = l date
      - if date == Time.zone.today
        (today)
      - else
        = surround '(', ')' do
          %time.timeago{:datetime => date.iso8601}= time_ago_in_words date
- if @clothing.image.file?
  .image
    - if managing?
      .instructions Click on a point in the image to save a color from the image.
      = form_tag save_clothing_color_path(@clothing) do
        = image_submit_tag @clothing.image.url(:large), :class => 'imagebtn'
    - else
      = clothing_thumbnail @clothing, :size => :large
      
.metadata
  %span.tags
    Tags:
    - @clothing.tags.each do |t|
      = link_to t.name, clothing_by_tag_path(t.name)
      
- unless @clothing.color.nil?
  - colors = @clothing.color.split(",")
  %table.auto.table
    %tr
      %td Color
      - colors.each do |x|
        %td.color
          .color-box{:style => "background: ##{x}"}
            = "#" + x
          = delete_icon delete_clothing_color_path(@clothing.id, x)
    %tr
      %td
        Complementary
      - colors.each do |x|
        - comp = Color::HSL.from_html(x).complementary.html
        %td
          .color-box{:style => "background: #{comp}"}
            = comp
    %tr
      %td Triadic:
      - colors.each do |x|
        - col = Color::HSL.from_html(x)
        %td
          - tr1 = col.clone
          - tr2 = col.clone
          - tr1.hue = tr1.hue + 120
          - tr2.hue = tr2.hue - 120
          .color-box{:style => "background: #{tr1.html}"}= tr1.html
          .color-box{:style => "background: #{tr2.html}"}= tr2.html

- if @previous_matches.size > 0
  .previous_matches= render :partial => 'clothing_thumbnails', :locals => { :list => @previous_matches }
- if @matches.size > 0
  .matches= render :partial => 'clothing_thumbnails', :locals => { :list => @matches }

%p= @clothing.notes

.clear-both
- if @logs
  - @logs.each do |c|
    .entry
      .date= current_user ? (link_to c.date, clothing_log_path(c)) : c.date
      .clothes
        - if c.date
          - current_account.clothing_logs.find(:all, :select => 'clothing_logs.id, clothing_id, clothing.name', :order => 'clothing.name', :joins => 'INNER JOIN clothing ON clothing_logs.clothing_id=clothing.id', :conditions => ["date >= ? and date < ? and outfit_id=?", c.date, c.date + 1.day, c.outfit_id]).each do |x| 
            .item= clothing_thumbnail x.clothing, {:size => :medium, :path => current_user ? clothing_log_path(x) : clothing_path(x.clothing)}

.clear-both
